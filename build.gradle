buildscript {
    ext {
        repos = {
            gradlePluginPortal()
            mavenLocal()
            mavenCentral()
        }
        groovyAllVersion = '2.4.13'
        spockVersion = '1.1-groovy-2.4'
        coverallsVersion = '2.8.2'
        lombokVersion = '1.16.18'
        jacksonVersion = '2.9.8'
        byteBuddyVersion = '1.9.12'
        jsonPathAssertVersion = '2.2.0'
        objenesisVersion = '3.0.1'
    }
    repositories (repos)
    dependencies {
        classpath "org.kt3k.gradle.plugin:coveralls-gradle-plugin:$coverallsVersion"
    }
}

allprojects {
    repositories (repos)

    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'jacoco'
    apply plugin: 'checkstyle'
    apply plugin: 'com.github.kt3k.coveralls'

    jacoco {
        toolVersion = "0.8.1"
    }

    checkstyle {
        toolVersion "8.1"
    }
}

subprojects {
    dependencies {
        compile "org.projectlombok:lombok:$lombokVersion"
        compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
        compile "com.fasterxml.jackson.module:jackson-module-jsonSchema:$jacksonVersion"
        
        testCompile "org.spockframework:spock-core:$spockVersion"
        testCompile "org.codehaus.groovy:groovy-all:$groovyAllVersion"
        testRuntimeOnly "net.bytebuddy:byte-buddy:$byteBuddyVersion"
        testRuntimeOnly "org.objenesis:objenesis:$objenesisVersion"
    }

    jacocoTestReport {
        reports {
            xml.enabled = true
            html.enabled = true
        }
    }
}

coveralls {
    sourceDirs = subprojects.sourceSets.main.allSource.srcDirs.flatten()
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/jacocoRootReport.xml"
}

task jacocoRootReport(type: org.gradle.testing.jacoco.tasks.JacocoReport) {
    def testableSubprojects = subprojects.findAll {it.name != 'vaunt-core'}

    dependsOn = testableSubprojects.test

    additionalSourceDirs = files(testableSubprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories = files(testableSubprojects.sourceSets.main.allSource.srcDirs)
    classDirectories =  files(testableSubprojects.sourceSets.main.output)
    executionData = files(testableSubprojects.jacocoTestReport.executionData)
    
    reports {
        xml.enabled = true
        html.enabled = true
    }
}